name: Publish

on:
  push:
    branches:
      - main
      - develop

env:
  PYTHON_VERSION: 3.11

jobs:
  publish:
    # To enable auto publishing to github, update your electron publisher
    # config in package.json > "build" and remove the conditional below
    runs-on: ${{ matrix.platform.os }}
    strategy:
      matrix:
        platform:
          [
            { os: "ubuntu-latest", cmd: "--linux" },
            { os: "macos-latest", cmd: "--mac" },
            { os: "windows-latest", cmd: "--win" },
          ]

    steps:
      - name: Checkout git repo
        uses: actions/checkout@v4

      - name: Setup Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Node and NPM
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm

      - name: add git binaries to PATH on Windows
        if: runner.os == 'Windows'
        run: |
          echo "C:\Program Files\Git\usr\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          echo "C:\Program Files\Git\mingw64\libexec\git-core" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Install and build
        run: |
          npm cache clean --force
          npm install
          npm run postinstall
          npm run build

      - name: Publish releases
        env:
          # These values are used for auto updates signing
          # APPLE_ID: ${{ secrets.APPLE_ID }}
          # APPLE_ID_PASS: ${{ secrets.APPLE_ID_PASS }}
          # CSC_LINK: ${{ secrets.CSC_LINK }}
          # CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
          # This is used for uploading release assets to github
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npm exec electron-builder -- --publish always ${{ matrix.platform.cmd }}
